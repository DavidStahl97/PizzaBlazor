@page "/"

<h1>Hello, world!</h1>

<br/>

<!-- Menu -->

<PizzaList Title="Our selection of pizzas"
           Menu="@State.Menu"
           Selected="@(async (pizza) => AddToBasket(pizza))"/>

<!-- Shopping Basket -->
<ShoppingBasket Title="Your current order"
                Basket="@State.Baseket"
                GetPizzaFromId="@State.Menu.GetPizza"
                Selected="@(pos => RemoveFromBasket(pos))" />

    <h1>Please enter your details below</h1>

    <EditForm OnValidSubmit="PlaceOrder"
              Model="@State.Baseket.Customer">
        <DataAnnotationsValidator />

        <div class="form-group row mb-1">
            <label class="col-sm-3 col-form-label" for="FirstName">Name:</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="@State.Baseket.Customer.Name"/>
                <ValidationMessage For="@(() => State.Baseket.Customer.Name)" />
            </div>
        </div>

        <div class="form-group row mb-1">
            <label class="col-sm-3 col-form-label" for="LastName">Street:</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="@State.Baseket.Customer.Street" />
                <ValidationMessage For="@(() => State.Baseket.Customer.Street)"/>
            </div>
        </div>

        <div class="form-group row mb-1">
            <label class="col-sm-3 col-form-label" for="Birthday">City</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="@State.Baseket.Customer.City"/>
                <ValidationMessage For="@(() => State.Baseket.Customer.City)"/>
            </div>
        </div>

        <div class="form-group mb-0">
            <button type="submit" id="BtnRegister" class="btn btn-primary">
                Checkout
            </button>
        </div>
    </EditForm>
}

@code {
    private State State = new State
    {
        Menu = new Menu
        {
            Pizzas = new List<Pizza>
            {
                new Pizza
                {
                    Id = 1,
                    Name = "Pepperoni",
                    Price = 8.90M,
                    Spiciness = Spiciness.Spicy
                },
                new Pizza
                {
                    Id = 2,
                    Name = "Margarita",
                    Price = 83.90M,
                    Spiciness = Spiciness.None
                },
                new Pizza
                {
                    Id = 3,
                    Name = "Diabolo",
                    Price = 1.90M,
                    Spiciness = Spiciness.Hot
                }
            }
        }
    };

    private string SpicingImage(Spiciness spiciness) =>
        $"images/{spiciness.ToString().ToLower()}.png";

    private void AddToBasket(Pizza pizza)
    {
        Console.WriteLine($"Add pizza { pizza.Name }");
        State.Baseket.Add(pizza.Id);
    }

    private void RemoveFromBasket(int pos)
    {
        Console.WriteLine($"Remove pizaa at pos {pos}");
        State.Baseket.RemoveAt(pos);
    }

    private void PlaceOrder()
    {
        Console.WriteLine("Placing order");
    }
}
